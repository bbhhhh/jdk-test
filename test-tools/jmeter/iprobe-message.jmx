<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="_hundred" elementType="Argument">
            <stringProp name="Argument.name">_hundred</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_thousand" elementType="Argument">
            <stringProp name="Argument.name">_thousand</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_MIXED-WPAPSK2" elementType="Argument">
            <stringProp name="Argument.name">_MIXED-WPAPSK2</stringProp>
            <stringProp name="Argument.value">MIXED-WPAPSK2</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_OPEN" elementType="Argument">
            <stringProp name="Argument.name">_OPEN</stringProp>
            <stringProp name="Argument.value">OPEN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_TRUE" elementType="Argument">
            <stringProp name="Argument.name">_TRUE</stringProp>
            <stringProp name="Argument.value">TRUE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="_FALSE" elementType="Argument">
            <stringProp name="Argument.name">_FALSE</stringProp>
            <stringProp name="Argument.value">FALSE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Mobile" elementType="Argument">
            <stringProp name="Argument.name">Mobile</stringProp>
            <stringProp name="Argument.value">Mobile</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PC" elementType="Argument">
            <stringProp name="Argument.name">PC</stringProp>
            <stringProp name="Argument.value">PC</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PAD" elementType="Argument">
            <stringProp name="Argument.name">PAD</stringProp>
            <stringProp name="Argument.value">PAD</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="AP" elementType="Argument">
            <stringProp name="Argument.name">AP</stringProp>
            <stringProp name="Argument.value">AP</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Other" elementType="Argument">
            <stringProp name="Argument.name">Other</stringProp>
            <stringProp name="Argument.value">Other</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="LAN" elementType="Argument">
            <stringProp name="Argument.name">LAN</stringProp>
            <stringProp name="Argument.value">LAN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="WIFI" elementType="Argument">
            <stringProp name="Argument.name">WIFI</stringProp>
            <stringProp name="Argument.value">WIFI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="APLAN" elementType="Argument">
            <stringProp name="Argument.name">APLAN</stringProp>
            <stringProp name="Argument.value">APLAN</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="APWIFI" elementType="Argument">
            <stringProp name="Argument.name">APWIFI</stringProp>
            <stringProp name="Argument.value">APWIFI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ONLINE" elementType="Argument">
            <stringProp name="Argument.name">ONLINE</stringProp>
            <stringProp name="Argument.value">ONLINE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OFFLINE" elementType="Argument">
            <stringProp name="Argument.name">OFFLINE</stringProp>
            <stringProp name="Argument.value">OFFLINE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BLOCK" elementType="Argument">
            <stringProp name="Argument.name">BLOCK</stringProp>
            <stringProp name="Argument.value">BLOCK</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Half" elementType="Argument">
            <stringProp name="Argument.name">Half</stringProp>
            <stringProp name="Argument.value">Half</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Full" elementType="Argument">
            <stringProp name="Argument.name">Full</stringProp>
            <stringProp name="Argument.value">Full</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Auto" elementType="Argument">
            <stringProp name="Argument.name">Auto</stringProp>
            <stringProp name="Argument.value">Auto</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="2G" elementType="Argument">
            <stringProp name="Argument.name">2G</stringProp>
            <stringProp name="Argument.value">2.4G</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="5G" elementType="Argument">
            <stringProp name="Argument.name">5G</stringProp>
            <stringProp name="Argument.value">5G</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="PHONE" elementType="Argument">
            <stringProp name="Argument.name">PHONE</stringProp>
            <stringProp name="Argument.value">PHONE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="STB" elementType="Argument">
            <stringProp name="Argument.name">STB</stringProp>
            <stringProp name="Argument.value">STB</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="OTHER" elementType="Argument">
            <stringProp name="Argument.name">OTHER</stringProp>
            <stringProp name="Argument.value">OTHER</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="11ac" elementType="Argument">
            <stringProp name="Argument.name">11ac</stringProp>
            <stringProp name="Argument.value">11ac</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="11n" elementType="Argument">
            <stringProp name="Argument.name">11n</stringProp>
            <stringProp name="Argument.value">11n</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="11bg" elementType="Argument">
            <stringProp name="Argument.name">11bg</stringProp>
            <stringProp name="Argument.value">11bg</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="11bgn" elementType="Argument">
            <stringProp name="Argument.name">11bgn</stringProp>
            <stringProp name="Argument.value">11bgn</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="11gn" elementType="Argument">
            <stringProp name="Argument.name">11gn</stringProp>
            <stringProp name="Argument.value">11gn</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="11a" elementType="Argument">
            <stringProp name="Argument.name">11a</stringProp>
            <stringProp name="Argument.value">11a</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="11na" elementType="Argument">
            <stringProp name="Argument.name">11na</stringProp>
            <stringProp name="Argument.value">11na</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="11ax" elementType="Argument">
            <stringProp name="Argument.name">11ax</stringProp>
            <stringProp name="Argument.value">11ax</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Video" elementType="Argument">
            <stringProp name="Argument.name">Video</stringProp>
            <stringProp name="Argument.value">Video</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Web" elementType="Argument">
            <stringProp name="Argument.name">Web</stringProp>
            <stringProp name="Argument.value">Web</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Game" elementType="Argument">
            <stringProp name="Argument.name">Game</stringProp>
            <stringProp name="Argument.value">Game</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="IMS" elementType="Argument">
            <stringProp name="Argument.name">IMS</stringProp>
            <stringProp name="Argument.value">IMS</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ERROR_NONE" elementType="Argument">
            <stringProp name="Argument.name">ERROR_NONE</stringProp>
            <stringProp name="Argument.value">ERROR_NONE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ERROR_404" elementType="Argument">
            <stringProp name="Argument.name">ERROR_404</stringProp>
            <stringProp name="Argument.value">ERROR_404</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="periodic-message" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">200</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">20</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="periodicmessage-request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;actualTime&quot;: ${__time()},&#xd;
	&quot;eventType&quot;: {&#xd;
		&quot;eventCode&quot;: 2,&#xd;
		&quot;subEvent&quot;: 0&#xd;
	},&#xd;
	&quot;dpiVersionInfo&quot;: {&#xd;
		&quot;interfaceVersion&quot;: &quot;V4.0.0.JiaKuan&quot;,&#xd;
		&quot;version&quot;: &quot;4.0.1.JiaKuan&quot;&#xd;
	},&#xd;
	&quot;deviceInfo&quot;: {&#xd;
		&quot;cpu&quot;: &quot;EN7526GT&quot;,&#xd;
		&quot;model&quot;: &quot;model_${__Random(1,99)}&quot;,&#xd;
		&quot;style&quot;: &quot;Model3&quot;,&#xd;
		&quot;hardwareVersion&quot;: &quot;HV1.0.00.092&quot;,&#xd;
		&quot;flashSize&quot;: 256,&#xd;
		&quot;firmwareVersion&quot;: &quot;V1.6.10.052&quot;,&#xd;
		&quot;deviceId&quot;: &quot;${sn}&quot;,&#xd;
		&quot;mac&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
		&quot;manufacturer&quot;: &quot;${vendor}&quot;,&#xd;
		&quot;ram_size&quot;: 512,&#xd;
		&quot;province&quot;: &quot;NMG&quot;,&#xd;
		&quot;nfcSupport&quot;: &quot;NO&quot;,&#xd;
		&quot;wifiInfoList&quot;: [{&#xd;
			&quot;channel&quot;: &quot;${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDEnable&quot;: &quot;TRUE&quot;,&#xd;
			&quot;SSIDname&quot;: &quot;ssid-${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDStandard&quot;: &quot;${__RandomFromMultipleVars(11bgn|11n|11ac|11gb|11gn|11a|11na|11ax)}&quot;,&#xd;
			&quot;IdlePercent&quot;: ${__Random(1,99)},&#xd;
			&quot;interferencePercent&quot;: ${__Random(1,99)},&#xd;
			&quot;noiseLevel&quot;: &quot;${__Random(-100,-40)}&quot;,&#xd;
			&quot;BeaconFails&quot;: 1,&#xd;
			&quot;SSIDMAC&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
			&quot;RecvErrorPackets&quot;: ${__Random(0,10)},&#xd;
			&quot;SSIDEncryptionMode&quot;: &quot;${__RandomFromMultipleVars(_MIXED-WPAPSK2|_OPEN)}&quot;,&#xd;
			&quot;SendPackets&quot;: ${__Random(1,99999)},&#xd;
			&quot;SSID&quot;: ${__Random(1,9)},&#xd;
			&quot;SSIDAdvertisement&quot;: &quot;${__RandomFromMultipleVars(_TRUE|_FALSE)}&quot;,&#xd;
			&quot;transmitPower&quot;: ${__Random(60,100)},&#xd;
			&quot;RecvPackets&quot;: ${__Random(1,99999)}&#xd;
		}, {&#xd;
			&quot;channel&quot;: &quot;${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDEnable&quot;: &quot;TRUE&quot;,&#xd;
			&quot;SSIDname&quot;: &quot;ssid-${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDStandard&quot;: &quot;${__RandomFromMultipleVars(11bgn|11n|11ac|11gb|11gn|11a|11na|11ax)}&quot;,&#xd;
			&quot;IdlePercent&quot;: ${__Random(1,99)},&#xd;
			&quot;interferencePercent&quot;: ${__Random(1,99)},&#xd;
			&quot;noiseLevel&quot;: &quot;${__Random(-100,-40)}&quot;,&#xd;
			&quot;BeaconFails&quot;: 1,&#xd;
			&quot;SSIDMAC&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
			&quot;RecvErrorPackets&quot;: ${__Random(0,10)},&#xd;
			&quot;SSIDEncryptionMode&quot;: &quot;${__RandomFromMultipleVars(_MIXED-WPAPSK2|_OPEN)}&quot;,&#xd;
			&quot;SendPackets&quot;: ${__Random(1,99999)},&#xd;
			&quot;SSID&quot;: ${__Random(1,9)},&#xd;
			&quot;SSIDAdvertisement&quot;: &quot;${__RandomFromMultipleVars(_TRUE|_FALSE)}&quot;,&#xd;
			&quot;transmitPower&quot;: ${__Random(60,100)},&#xd;
			&quot;RecvPackets&quot;: ${__Random(1,99999)}&#xd;
		}&#xd;
		]&#xd;
	},&#xd;
	&quot;deviceStatus&quot;: {&#xd;
		&quot;bootTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(1,10)}m,)},,yyyy-MM-dd HH:mm:ss,)}&quot;,&#xd;
		&quot;runingTime&quot;: ${__Random(100,9999)},&#xd;
		&quot;sampleTime&quot;: &quot;${__time(yyyy-MM-dd HH:mm:ss,)}&quot;,&#xd;
		&quot;lan1ConnectStatus&quot;: &quot;CONNECTED&quot;,&#xd;
		&quot;lan2ConnectStatus&quot;: &quot;DISCONNECTED&quot;,&#xd;
		&quot;lan3ConnectStatus&quot;: &quot;DISCONNECTED&quot;,&#xd;
		&quot;lan4ConnectStatus&quot;: &quot;DISCONNECTED&quot;,&#xd;
		&quot;CPU&quot;: ${__Random(0,100)},&#xd;
		&quot;RAM&quot;: ${__Random(0,100)},&#xd;
          &quot;MainChipTemperature&quot;: &quot;${__Random(30,100)}&quot;,		&#xd;
		&quot;WAN&quot;: &quot;CONNECTED&quot;,&#xd;
		&quot;WIFI&quot;: &quot;DISCONNECTED&quot;,&#xd;
		&quot;lanIP&quot;: &quot;${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
          &quot;lanIPV6&quot;: &quot;23:23:23:23:23:23&quot;,&#xd;
		&quot;wanIP&quot;: &quot;${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
          &quot;wanIPV6&quot;: &quot;44:44:44:44:44:44&quot;,&#xd;
		&quot;PPPOEError&quot;: &quot;${__RandomFromMultipleVars(&quot;&quot;|ERROR_NONE|ERROR_404)}&quot;,&#xd;
		&quot;PPPOEStatus&quot;: &quot;CONNECTED&quot;,&#xd;
		&quot;PPPOEUpTime&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
		&quot;Username&quot;: &quot;${__Random(18900100101,18999999999)}&quot;,&#xd;
		&quot;reportFailInfo&quot;:{},&#xd;
		&quot;pppoeConnectInfo&quot;:{&#xd;
			&quot;pppoeInfoHead&quot;:[],&#xd;
			&quot;pppoeInfo&quot;:[]&#xd;
			},&#xd;
		&quot;detailsWANIfInfo&quot;:[]&#xd;
	},&#xd;
	&quot;wanTrafficData&quot;: {&#xd;
		&quot;wanNumber&quot;: 2,&#xd;
		&quot;wanTrafficInfo&quot;: [{&#xd;
			&quot;wanName&quot;: &quot;1_TR069_R_VID_4005&quot;,&#xd;
			&quot;maxTxRate&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;downStaticstics&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;averTxRate&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;averRxRate&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;upStaticstics&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;maxRxRate&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;wanIndex&quot;: 1&#xd;
		}, {&#xd;
			&quot;wanName&quot;: &quot;2_INTERNET_R_VID_41&quot;,&#xd;
			&quot;maxTxRate&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;downStaticstics&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;averTxRate&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;averRxRate&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;upStaticstics&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;maxRxRate&quot;: &quot;${__Random(100,999)}&quot;,&#xd;
			&quot;wanIndex&quot;: 2&#xd;
		}]&#xd;
	},&#xd;
	&quot;subDeviceInfo&quot;: {&#xd;
		&quot;subDeviceNumber&quot;: 2,&#xd;
		&quot;deviceInfo&quot;: [&#xd;
		{&#xd;
			&quot;deviceType&quot;: &quot;${__RandomFromMultipleVars(Mobile|PC|PAD|AP|Other)}&quot;,&#xd;
			&quot;connectType&quot;: &quot;${__RandomFromMultipleVars(LAN|WIFI|AP|APLAN|APWIFI)}&quot;,&#xd;
			&quot;upTime&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;connectStatus&quot;: &quot;${__RandomFromMultipleVars(ONLINE|OFFLINE|BLOCK)}&quot;,&#xd;
			&quot;offLineTimes&quot;: ${__Random(0,99)},&#xd;
			&quot;detailOffLineTimes&quot;: &quot;[${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}]&quot;,&#xd;
			&quot;deviceName&quot;: &quot;device_${__Random(1,9)}&quot;,&#xd;
               &quot;manufacture&quot;: &quot;${__StringFromFile(C:\\Data\\github-folders\\java\\jdk-test\\test-tools\\jmeter\\vendor.txt,,,)}&quot;,&#xd;
               &quot;model&quot;: &quot;model_${__Random(1,99)}&quot;,&#xd;
			&quot;Mac&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
			&quot;averTxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
			&quot;averRxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
			&quot;maxTxRate&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;maxRxRate&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;upStaticstics&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;downStaticstics&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;lanNegBitRate&quot;: &quot;${__RandomFromMultipleVars(_hundred|_thousand)}&quot;,&#xd;
			&quot;duplexMode&quot;: &quot;${__RandomFromMultipleVars(Full|Half|Auto)}&quot;,&#xd;
			&quot;SSIDName&quot;:&quot;ssid_${__Random(1,9)}&quot;,&#xd;
               &quot;WLANRadioPower&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
               &quot;WLANRadioType&quot;: &quot;${__RandomFromMultipleVars(5G|2G)}&quot;,&#xd;
               &quot;wlanNegRxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
               &quot;wlanNegTxRate&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
                &quot;IP&quot;: &quot;192.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
			&quot;IPv6Address&quot;: &quot;fe80::7a91:e9ff:fe20:8473&quot;,&#xd;
			&quot;LanPort&quot;: &quot;LAN${__Random(1,4)}&quot;,&#xd;
			&quot;dhcpDeviceType&quot;:&quot;${__RandomFromMultipleVars(PHONE|PAD|PC|STB|AP|OTHER)}&quot;&#xd;
		},&#xd;
		{&#xd;
			&quot;deviceType&quot;: &quot;${__RandomFromMultipleVars(Mobile|PC|PAD|AP|Other)}&quot;,&#xd;
			&quot;connectType&quot;: &quot;${__RandomFromMultipleVars(LAN|WIFI|AP|APLAN|APWIFI)}&quot;,&#xd;
			&quot;upTime&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;connectStatus&quot;: &quot;${__RandomFromMultipleVars(ONLINE|OFFLINE|BLOCK)}&quot;,&#xd;
			&quot;offLineTimes&quot;: ${__Random(0,99)},&#xd;
			&quot;detailOffLineTimes&quot;: &quot;[${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}, ${__Random(0,9)}]&quot;,&#xd;
			&quot;deviceName&quot;: &quot;device_${__Random(1,9)}&quot;,&#xd;
               &quot;manufacture&quot;: &quot;${__StringFromFile(C:\\Data\\github-folders\\java\\jdk-test\\test-tools\\jmeter\\vendor.txt,,,)}&quot;,&#xd;
               &quot;model&quot;: &quot;model_${__Random(1,99)}&quot;,&#xd;
			&quot;Mac&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
			&quot;averTxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
			&quot;averRxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
			&quot;maxTxRate&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;maxRxRate&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;upStaticstics&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;downStaticstics&quot;: &quot;${__Random(100,999999)}&quot;,&#xd;
			&quot;lanNegBitRate&quot;: &quot;${__RandomFromMultipleVars(_hundred|_thousand)}&quot;,&#xd;
			&quot;duplexMode&quot;: &quot;${__RandomFromMultipleVars(Full|Half|Auto)}&quot;,&#xd;
			&quot;SSIDName&quot;:&quot;ssid_${__Random(1,9)}&quot;,&#xd;
               &quot;WLANRadioPower&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
               &quot;WLANRadioType&quot;: &quot;${__RandomFromMultipleVars(5G|2G)}&quot;,&#xd;
               &quot;wlanNegRxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
               &quot;wlanNegTxRate&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
                &quot;IP&quot;: &quot;192.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
			&quot;IPv6Address&quot;: &quot;fe80::7a91:e9ff:fe20:8473&quot;,&#xd;
			&quot;LanPort&quot;: &quot;LAN${__Random(1,4)}&quot;,&#xd;
			&quot;dhcpDeviceType&quot;:&quot;${__RandomFromMultipleVars(PHONE|PAD|PC|STB|AP|OTHER)}&quot;&#xd;
		}&#xd;
		]&#xd;
	},&#xd;
	&quot;potsInfo&quot;: {&#xd;
		&quot;potsStatus&quot;: &quot;SUCCESS&quot;,&#xd;
		&quot;potsPhoneNumber&quot;: &quot;+${__Random(8647100000001,8647199999999)}&quot;,&#xd;
		&quot;potsIndex&quot;: 1&#xd;
	},&#xd;
	&quot;ponInfo&quot;: {&#xd;
		&quot;PONRXPower&quot;: ${__Random(100,999999)},&#xd;
		&quot;PONTXPower&quot;: ${__Random(100,999999)}&#xd;
	},&#xd;
  &quot;WLANNeighbor&quot;: {&#xd;
    &quot;number&quot;: 2,&#xd;
    &quot;radioInfo&quot;: [&#xd;
      {&#xd;
        &quot;radioType&quot;: &quot;${__RandomFromMultipleVars(2G|5G)}&quot;,&#xd;
        &quot;SSIDName&quot;: &quot;ssid_${__Random(1,9)}&quot;,&#xd;
        &quot;Mac&quot;: &quot;D8:C4:97:3D:D4:69&quot;,&#xd;
        &quot;channel&quot;: &quot;chan_${__Random(1,9)}&quot;,&#xd;
        &quot;WLANRadioPower&quot;: &quot;${__Random(10,99)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;radioType&quot;: &quot;${__RandomFromMultipleVars(2G|5G)}&quot;,&#xd;
        &quot;SSIDName&quot;: &quot;ssid_${__Random(1,9)}&quot;,&#xd;
        &quot;Mac&quot;: &quot;D8:C4:97:3D:D4:69&quot;,&#xd;
        &quot;channel&quot;: &quot;chan_${__Random(1,9)}&quot;,&#xd;
        &quot;WLANRadioPower&quot;: &quot;${__Random(10,99)}&quot;&#xd;
      }&#xd;
      ]&#xd;
  },&#xd;
  &quot;serviceData&quot;: {&#xd;
    &quot;serviceNumber&quot;: 3,&#xd;
    &quot;serviceBasicInfo&quot;: [&#xd;
      {&#xd;
        &quot;mac&quot;: &quot;40:00:80:06:86:0b&quot;,&#xd;
        &quot;startTime&quot;: ${__time()},&#xd;
        &quot;runningTime&quot;: ${__Random(10,9999999)},&#xd;
        &quot;url&quot;: &quot;url_${__Random(10,9999)}&quot;,&#xd;
        &quot;domain&quot;: &quot;domain_${__Random(10,9999)}&quot;,&#xd;
        &quot;protocol&quot;: &quot;TCP&quot;,&#xd;
        &quot;serviceType&quot;: &quot;${__RandomFromMultipleVars(Video|Game|Web|IMS)}&quot;,&#xd;
        &quot;averTxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
        &quot;averRxRate&quot;: &quot;${__Random(10,999999)}&quot;,&#xd;
        &quot;maxTxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
        &quot;maxRxRate&quot;: &quot;${__Random(10,999999)}&quot;,&#xd;
        &quot;downStaticstics&quot;: &quot;${__Random(10,9999999)}&quot;,&#xd;
        &quot;upStaticstics&quot;: &quot;${__Random(10,9999999)}&quot;,&#xd;
        &quot;dnsInfo&quot;: {&#xd;
          &quot;dnsResponseTime&quot;: ${__Random(1,99)},&#xd;
          &quot;ipAddress&quot;: &quot;[221.179.172.167]&quot;&#xd;
        },&#xd;
        &quot;httpConnectInfo&quot;: {&#xd;
          &quot;httpResponesDelay&quot;: ${__Random(1,99)},&#xd;
          &quot;httpRequestErrorList&quot;: &quot;400|501|404&quot;,&#xd;
          &quot;httpDownloadRate&quot;: ${__Random(1,99)},&#xd;
          &quot;httpRequestTimes&quot;: ${__Random(1,9)},&#xd;
          &quot;httpRequestFailTimes&quot;: ${__Random(1,9)}&#xd;
        },&#xd;
        &quot;tcpConnectInfo&quot;: {&#xd;
          &quot;tcpConnectTimes&quot;: ${__Random(1,99)},&#xd;
          &quot;upTcpConnectTimes&quot;:${__Random(1,99)},&#xd;
          &quot;tcpConnectSuccessTimes&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpConnectAvgTime1&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpConnectAvgTime2&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpReconnectRate&quot;: ${__Random(1,99)},&#xd;
          &quot;upTcpReconnectRate&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpTTLInfo&quot;: &quot;{52=8,63=3}&quot;,&#xd;
          &quot;upTcpTTLInfo&quot;: &quot;{50=4,60=7}&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;mac&quot;: &quot;40:00:80:06:86:0b&quot;,&#xd;
        &quot;startTime&quot;: ${__time()},&#xd;
        &quot;runningTime&quot;: ${__Random(10,9999999)},&#xd;
        &quot;url&quot;: &quot;url_${__Random(10,9999)}&quot;,&#xd;
        &quot;domain&quot;: &quot;domain_${__Random(10,9999)}&quot;,&#xd;
        &quot;protocol&quot;: &quot;TCP&quot;,&#xd;
        &quot;serviceType&quot;: &quot;${__RandomFromMultipleVars(Video|Game|Web|IMS)}&quot;,&#xd;
        &quot;averTxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
        &quot;averRxRate&quot;: &quot;${__Random(10,999999)}&quot;,&#xd;
        &quot;maxTxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
        &quot;maxRxRate&quot;: &quot;${__Random(10,999999)}&quot;,&#xd;
        &quot;downStaticstics&quot;: &quot;${__Random(10,9999999)}&quot;,&#xd;
        &quot;upStaticstics&quot;: &quot;${__Random(10,9999999)}&quot;,&#xd;
        &quot;dnsInfo&quot;: {&#xd;
          &quot;dnsResponseTime&quot;: ${__Random(1,99)},&#xd;
          &quot;ipAddress&quot;: &quot;[221.179.172.167]&quot;&#xd;
        },&#xd;
        &quot;httpConnectInfo&quot;: {&#xd;
          &quot;httpResponesDelay&quot;: ${__Random(1,99)},&#xd;
          &quot;httpRequestErrorList&quot;: &quot;400|501|404&quot;,&#xd;
          &quot;httpDownloadRate&quot;: ${__Random(1,99)},&#xd;
          &quot;httpRequestTimes&quot;: ${__Random(1,9)},&#xd;
          &quot;httpRequestFailTimes&quot;: ${__Random(1,9)}&#xd;
        },&#xd;
        &quot;tcpConnectInfo&quot;: {&#xd;
          &quot;tcpConnectTimes&quot;: ${__Random(1,99)},&#xd;
          &quot;upTcpConnectTimes&quot;:${__Random(1,99)},&#xd;
          &quot;tcpConnectSuccessTimes&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpConnectAvgTime1&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpConnectAvgTime2&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpReconnectRate&quot;: ${__Random(1,99)},&#xd;
          &quot;upTcpReconnectRate&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpTTLInfo&quot;: &quot;{52=8,63=3}&quot;,&#xd;
          &quot;upTcpTTLInfo&quot;: &quot;{50=4,60=7}&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;mac&quot;: &quot;40:00:80:06:86:0b&quot;,&#xd;
        &quot;startTime&quot;: ${__time()},&#xd;
        &quot;runningTime&quot;: ${__Random(10,9999999)},&#xd;
        &quot;url&quot;: &quot;url_${__Random(10,9999)}&quot;,&#xd;
        &quot;domain&quot;: &quot;domain_${__Random(10,9999)}&quot;,&#xd;
        &quot;protocol&quot;: &quot;TCP&quot;,&#xd;
        &quot;serviceType&quot;: &quot;${__RandomFromMultipleVars(Video|Game|Web|IMS)}&quot;,&#xd;
        &quot;averTxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
        &quot;averRxRate&quot;: &quot;${__Random(10,999999)}&quot;,&#xd;
        &quot;maxTxRate&quot;: &quot;${__Random(10,9999)}&quot;,&#xd;
        &quot;maxRxRate&quot;: &quot;${__Random(10,999999)}&quot;,&#xd;
        &quot;downStaticstics&quot;: &quot;${__Random(10,9999999)}&quot;,&#xd;
        &quot;upStaticstics&quot;: &quot;${__Random(10,9999999)}&quot;,&#xd;
        &quot;dnsInfo&quot;: {&#xd;
          &quot;dnsResponseTime&quot;: ${__Random(1,99)},&#xd;
          &quot;ipAddress&quot;: &quot;[221.179.172.167]&quot;&#xd;
        },&#xd;
        &quot;httpConnectInfo&quot;: {&#xd;
          &quot;httpResponesDelay&quot;: ${__Random(1,99)},&#xd;
          &quot;httpRequestErrorList&quot;: &quot;400|501|404&quot;,&#xd;
          &quot;httpDownloadRate&quot;: ${__Random(1,99)},&#xd;
          &quot;httpRequestTimes&quot;: ${__Random(1,9)},&#xd;
          &quot;httpRequestFailTimes&quot;: ${__Random(1,9)}&#xd;
        },&#xd;
        &quot;tcpConnectInfo&quot;: {&#xd;
          &quot;tcpConnectTimes&quot;: ${__Random(1,99)},&#xd;
          &quot;upTcpConnectTimes&quot;:${__Random(1,99)},&#xd;
          &quot;tcpConnectSuccessTimes&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpConnectAvgTime1&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpConnectAvgTime2&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpReconnectRate&quot;: ${__Random(1,99)},&#xd;
          &quot;upTcpReconnectRate&quot;: ${__Random(1,99)},&#xd;
          &quot;tcpTTLInfo&quot;: &quot;{52=8,63=3}&quot;,&#xd;
          &quot;upTcpTTLInfo&quot;: &quot;{50=4,60=7}&quot;&#xd;
        }&#xd;
      }&#xd;
      ]&#xd;
  },&#xd;
	&quot;dnsRequestInfo&quot;: {&#xd;
		&quot;dnsInfoList&quot;: [{&#xd;
			&quot;domain&quot;: &quot;domain_${__Random(1,99)}&quot;,&#xd;
			&quot;ipAddress&quot;: [&quot;221.179.172.167&quot;],&#xd;
			&quot;dnsAddress&quot;: &quot;${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
			&quot;dnsRequestTime&quot;: ${__timeShift(,${__time()},-PT${__Random(10,999)}S,)},&#xd;
			&quot;dnsResponseTime&quot;: ${__Random(10,100)},&#xd;
			&quot;errorInfo&quot;:&quot;&quot;&#xd;
		}, {&#xd;
			&quot;domain&quot;: &quot;domain_${__Random(1,99)}&quot;,&#xd;
			&quot;ipAddress&quot;: [&quot;221.179.172.167&quot;],&#xd;
			&quot;dnsAddress&quot;: &quot;${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
			&quot;dnsRequestTime&quot;: ${__timeShift(,${__time()},-PT${__Random(10,999)}S,)},&#xd;
			&quot;dnsResponseTime&quot;: ${__Random(10,100)},&#xd;
			&quot;errorInfo&quot;:&quot;&quot;&#xd;
		}]&#xd;
	},&#xd;
  &quot;tcpInfo&quot;:{&#xd;
  	&quot;tcpInfoList&quot;:[]&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">135.251.218.88</stringProp>
          <stringProp name="HTTPSampler.port">19002</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">rest/cmcc_softprobe/home_gateway/periodicmessage</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="realtime-message" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="realtime" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;eventType&quot;: {&#xd;
		&quot;eventCode&quot;: 5,&#xd;
		&quot;subEvent&quot;: 21&#xd;
	},&#xd;
	&quot;actualTime&quot;: ${__time()},&#xd;
	&quot;taskSource&quot;: 1,&#xd;
	&quot;taskId&quot;: ${__time()},&#xd;
	&quot;deviceInfo&quot;: {&#xd;
		&quot;deviceId&quot;: &quot;${sn}&quot;&#xd;
	},&#xd;
	&quot;dpiVersionInfo&quot;: {&#xd;
		&quot;version&quot;: &quot;3.0.0&quot;,&#xd;
		&quot;interfaceVersion&quot;: &quot;V3.0.0&quot;&#xd;
	},&#xd;
	&quot;pingTestInfo&quot;: {&#xd;
		&quot;host&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;averageResponseTime&quot;: ${__Random(10,99)},&#xd;
		&quot;maximumResponseTime&quot;: ${__Random(10,99)},&#xd;
		&quot;minimumResponseTime&quot;: ${__Random(10,99)},&#xd;
		&quot;dataBlockSize&quot;: 56656,&#xd;
		&quot;numberOfRepetitions&quot;: 3,&#xd;
		&quot;successCount&quot;: ${__Random(0,9)}&#xd;
	},&#xd;
	&quot;tracerouteTestInfo&quot;: {&#xd;
		&quot;host&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;responseTime&quot;: ${__Random(10,99)},&#xd;
		&quot;hopsNumberOfEntries&quot;: ${__Random(10,99)},&#xd;
		&quot;routeHopsInfo&quot;: [{&#xd;
			&quot;HopRTTimes&quot;: &quot;${__Random(0,9)},${__Random(0,9)},${__Random(0,9)}&quot;,&#xd;
			&quot;HopHost&quot;: &quot;2409:8010::71:1007&quot;,&#xd;
			&quot;HopHostAddress&quot;: &quot;2409:8010::71:1007&quot;,&#xd;
			&quot;HopErrorCode&quot;: 0&#xd;
		}, {&#xd;
			&quot;HopRTTimes&quot;: &quot;${__Random(0,9)},${__Random(0,9)},${__Random(0,9)}&quot;,&#xd;
			&quot;HopHost&quot;: &quot;2409:8010:1:2::20&quot;,&#xd;
			&quot;HopHostAddress&quot;: &quot;2409:8010:1:2::20&quot;,&#xd;
			&quot;HopErrorCode&quot;: 0&#xd;
		}, {&#xd;
			&quot;HopRTTimes&quot;: &quot;${__Random(0,9)},${__Random(0,9)},${__Random(0,9)}&quot;,&#xd;
			&quot;HopHost&quot;: &quot;2409:8010:0:4::50&quot;,&#xd;
			&quot;HopHostAddress&quot;: &quot;2409:8010:0:4::50&quot;,&#xd;
			&quot;HopErrorCode&quot;: 0&#xd;
		}]&#xd;
	},&#xd;
	&quot;ftpTestInfo&quot;: {&#xd;
		&quot;url&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;connectTime&quot;: ${__Random(10,99)},&#xd;
		&quot;speed&quot;: ${__Random(10,99)},&#xd;
		&quot;successRate&quot;: ${__Random(10,99)},&#xd;
		&quot;duration&quot;: ${__Random(10,9999)},&#xd;
		&quot;connectSuccessRate&quot;: ${__Random(10,99)},&#xd;
		&quot;integrityRate&quot;: ${__Random(10,99)},&#xd;
		&quot;size&quot;: ${__Random(1000,99999)}&#xd;
	},&#xd;
	&quot;httpDownloadTestInfo&quot;: {&#xd;
		&quot;url&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;connectTime&quot;: ${__Random(10,99)},&#xd;
		&quot;speed&quot;: ${__Random(100,999999)},&#xd;
		&quot;successRate&quot;: ${__Random(10,99)},&#xd;
		&quot;size&quot;: ${__Random(100,99999)},&#xd;
		&quot;sizePerSconds&quot;: &quot;&quot;&#xd;
	},&#xd;
	&quot;httpUploadTestInfo&quot;: {&#xd;
		&quot;url&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;connectTime&quot;: ${__Random(10,99)},&#xd;
		&quot;speed&quot;: ${__Random(10,99)},&#xd;
		&quot;size&quot;: ${__Random(1000,99999)}&#xd;
	},&#xd;
	&quot;osgiDownloadTestInfo&quot;: {&#xd;
		&quot;url&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;TestDownloadRate&quot;: ${__Random(1000,99999)},&#xd;
		&quot;TotalDownloadRate&quot;: ${__Random(1000,999999)},&#xd;
		&quot;EOMTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(10,999)}S,)},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS,)}&quot;,&#xd;
		&quot;TCPOpenRequestTime&quot;: &quot;${__dateTimeConvert(${__time()},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSSSS,)}&quot;,&#xd;
		&quot;BOMTime&quot;: &quot;${__dateTimeConvert(${__time()},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS,)}&quot;,&#xd;
		&quot;TCPOpenResponseTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(0,3)}S,)},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSSSS,)}&quot;,&#xd;
		&quot;ROMTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(10,999)}S,)},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS,)}&quot;,&#xd;
		&quot;TotalBytesReceived&quot;: ${__Random(10000,9999999)},&#xd;
		&quot;TestBytesReceived&quot;: ${__Random(10000,9999999)},&#xd;
		&quot;Result&quot;: 0&#xd;
	},&#xd;
	&quot;osgiUploadTestInfo&quot;: {&#xd;
		&quot;url&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;TestUploadRate&quot;: ${__Random(1000,999999)},&#xd;
		&quot;TotalUploadRate&quot;: 34,&#xd;
		&quot;EOMTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(10,999)}S,)},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS,)}&quot;,&#xd;
		&quot;TCPOpenRequestTime&quot;: &quot;${__dateTimeConvert(${__time()},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSSSS,)}&quot;,&#xd;
		&quot;BOMTime&quot;: &quot;${__dateTimeConvert(${__time()},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS,)}&quot;,&#xd;
		&quot;TCPOpenResponseTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(0,3)}S,)},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSSSSS,)}&quot;,&#xd;
		&quot;ROMTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(10,999)}S,)},,yyyy-MM-dd&apos;T&apos;HH:mm:ss.SSS,)}&quot;,&#xd;
		&quot;TestBytesSent&quot;: ${__Random(10000,9999999)},&#xd;
		&quot;TotalBytesSend&quot;: ${__Random(10000,9999999)}&#xd;
	},&#xd;
	&quot;webTestInfo&quot;: {&#xd;
		&quot;url&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;connectDelay&quot;: ${__Random(10,99)},&#xd;
		&quot;firstResponseDelay&quot;: ${__Random(10,99)},&#xd;
		&quot;fistPageTime&quot;: ${__Random(10,99)},&#xd;
		&quot;packetLostRate&quot;: ${__Random(10,99)},&#xd;
		&quot;dnsParseDelay&quot;: ${__Random(10,99)},&#xd;
		&quot;dnsParseResult&quot;: &quot;&quot;,&#xd;
		&quot;size&quot;: ${__Random(10,99)},&#xd;
		&quot;localTime&quot;: ${__Random(10,99)}&#xd;
	},&#xd;
	&quot;tcpPingTestInfo&quot;: {&#xd;
		&quot;host&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;result&quot;: 1,&#xd;
		&quot;rtt&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
		&quot;lost&quot;: &quot;${__Random(10,99)}&quot;&#xd;
	},&#xd;
	&quot;intraPingTestInfo&quot;: {&#xd;
		&quot;number&quot;: 10,&#xd;
		&quot;intraPingInfo&quot;: [{&#xd;
			&quot;host&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
			&quot;averageResponseTime&quot;: ${__Random(10,99)},&#xd;
			&quot;maximumResponseTime&quot;: ${__Random(10,99)},&#xd;
			&quot;minimumResponseTime&quot;: ${__Random(10,99)},&#xd;
			&quot;dataBlockSize&quot;: 1024,&#xd;
			&quot;numberOfRepetitions&quot;: ${__Random(10,99)},&#xd;
			&quot;successCount&quot;: 3&#xd;
		}, {&#xd;
			&quot;host&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
			&quot;averageResponseTime&quot;: ${__Random(10,99)},&#xd;
			&quot;maximumResponseTime&quot;: ${__Random(10,99)},&#xd;
			&quot;minimumResponseTime&quot;: ${__Random(10,99)},&#xd;
			&quot;dataBlockSize&quot;: 1024,&#xd;
			&quot;numberOfRepetitions&quot;: ${__Random(10,99)},&#xd;
			&quot;successCount&quot;: 3&#xd;
		}]&#xd;
	},&#xd;
	&quot;VideoDownloadTestInfo&quot;:{&#xd;
		&quot;url&quot;: &quot;${__Random(100,200)}.100.100.1&quot;,&#xd;
		&quot;firstFrameTime&quot;: ${__Random(10,99)},&#xd;
		&quot;stuckTimes&quot;: ${__Random(1,9)},&#xd;
		&quot;buffTime&quot;: ${__Random(10,99)},&#xd;
		&quot;speed&quot;: ${__Random(100,999999)},&#xd;
		&quot;dnsParseDelay&quot;:${__Random(10,99)}&#xd;
	},&#xd;
	&quot;DialingTestErrorInfo&quot;: {&#xd;
		&quot;testName&quot;: &quot;HttpDownload&quot;,&#xd;
		&quot;errorCode&quot;: -6&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">135.251.218.88</stringProp>
          <stringProp name="HTTPSampler.port">19002</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">rest/cmcc_softprobe/home_gateway/realtime</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="boot-message" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">300</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="boot" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
     &quot;eventType&quot;: {&#xd;
		&quot;eventCode&quot;: 1,&#xd;
		&quot;subEvent&quot;: 0&#xd;
	},&#xd;
     &quot;timeOffset&quot;: ${__Random(0,29)},&#xd;
	&quot;dpiVersionInfo&quot;: {&#xd;
		&quot;interfaceVersion&quot;: &quot;V4.0.0.JiaKuan&quot;,&#xd;
		&quot;version&quot;: &quot;4.0.1.JiaKuan&quot;&#xd;
	},&#xd;
	&quot;deviceInfo&quot;: {&#xd;
		&quot;cpu&quot;: &quot;EN7526GT&quot;,&#xd;
		&quot;model&quot;: &quot;GM619&quot;,&#xd;
		&quot;style&quot;: &quot;Model3&quot;,&#xd;
		&quot;hardwareVersion&quot;: &quot;HV1.0.00.092&quot;,&#xd;
		&quot;flashSize&quot;: 256,&#xd;
		&quot;firmwareVersion&quot;: &quot;V1.6.10.052&quot;,&#xd;
		&quot;deviceId&quot;: &quot;${sn}&quot;,&#xd;
		&quot;mac&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
		&quot;manufacturer&quot;: &quot;${vendor}&quot;,&#xd;
		&quot;ram_size&quot;: 512,&#xd;
		&quot;province&quot;: &quot;NMG&quot;,&#xd;
		&quot;nfcSupport&quot;: &quot;NO&quot;,&#xd;
		&quot;wifiInfoList&quot;: [{&#xd;
			&quot;channel&quot;: &quot;${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDEnable&quot;: &quot;TRUE&quot;,&#xd;
			&quot;SSIDname&quot;: &quot;CMCC-${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDStandard&quot;: &quot;11bgn&quot;,&#xd;
			&quot;SSIDMAC&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
			&quot;SSIDEncryptionMode&quot;: &quot;${__RandomFromMultipleVars(_MIXED-WPAPSK2|_OPEN)}&quot;,&#xd;
			&quot;SSID&quot;: ${__Random(1,9)},&#xd;
			&quot;SSIDAdvertisement&quot;: &quot;${__RandomFromMultipleVars(_TRUE|_FALSE)}&quot;&#xd;
		}, {&#xd;
			&quot;channel&quot;: &quot;${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDEnable&quot;: &quot;TRUE&quot;,&#xd;
			&quot;SSIDname&quot;: &quot;CMCC-${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDStandard&quot;: &quot;11bgn&quot;,&#xd;
			&quot;SSIDMAC&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
			&quot;SSIDEncryptionMode&quot;: &quot;${__RandomFromMultipleVars(_MIXED-WPAPSK2|_OPEN)}&quot;,&#xd;
			&quot;SSID&quot;: ${__Random(1,9)},&#xd;
			&quot;SSIDAdvertisement&quot;: &quot;${__RandomFromMultipleVars(_TRUE|_FALSE)}&quot;&#xd;
		}, &#xd;
		{&#xd;
			&quot;channel&quot;: &quot;${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDEnable&quot;: &quot;TRUE&quot;,&#xd;
			&quot;SSIDname&quot;: &quot;CMCC-${__Random(1,9)}&quot;,&#xd;
			&quot;SSIDStandard&quot;: &quot;11bgn&quot;,&#xd;
			&quot;SSIDMAC&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
			&quot;SSIDEncryptionMode&quot;: &quot;${__RandomFromMultipleVars(_MIXED-WPAPSK2|_OPEN)}&quot;,&#xd;
			&quot;SSID&quot;: ${__Random(1,9)},&#xd;
			&quot;SSIDAdvertisement&quot;: &quot;${__RandomFromMultipleVars(_TRUE|_FALSE)}&quot;&#xd;
		}&#xd;
		]&#xd;
	},&#xd;
	&quot;subDeviceInfo&quot;: {&#xd;
		&quot;subDeviceNumber&quot;: 3,&#xd;
		&quot;deviceInfo&quot;: [&#xd;
		{&#xd;
               &quot;deviceType&quot;: &quot;PC&quot;,&#xd;
			&quot;deviceName&quot;: &quot;device_${__Random(1,9)}&quot;,&#xd;
               &quot;manufacture&quot;: &quot;HP&quot;,&#xd;
               &quot;model&quot;: &quot;macbook&quot;,&#xd;
			&quot;IP&quot;: &quot;192.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
			&quot;LanPort&quot;: &quot;LAN${__Random(1,4)}&quot;,&#xd;
			&quot;Mac&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
               &quot;WLANRadioType&quot;: &quot;2.4G&quot;,&#xd;
               &quot;WLANRadioPower&quot;: &quot;12&quot;&#xd;
		},&#xd;
		{&#xd;
               &quot;deviceType&quot;: &quot;PAD&quot;,&#xd;
			&quot;deviceName&quot;: &quot;device_${__Random(1,9)}&quot;,&#xd;
               &quot;manufacture&quot;: &quot;Apple&quot;,&#xd;
               &quot;model&quot;: &quot;macbook&quot;,&#xd;
			&quot;IP&quot;: &quot;192.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
			&quot;LanPort&quot;: &quot;LAN${__Random(1,4)}&quot;,&#xd;
			&quot;Mac&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
               &quot;WLANRadioType&quot;: &quot;2.4G&quot;,&#xd;
               &quot;WLANRadioPower&quot;: &quot;12&quot;&#xd;
		},&#xd;
		{&#xd;
               &quot;deviceType&quot;: &quot;Phone&quot;,&#xd;
			&quot;deviceName&quot;: &quot;device_${__Random(1,9)}&quot;,&#xd;
               &quot;manufacture&quot;: &quot;Apple&quot;,&#xd;
               &quot;model&quot;: &quot;macbook&quot;,&#xd;
			&quot;IP&quot;: &quot;192.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
			&quot;LanPort&quot;: &quot;LAN${__Random(1,4)}&quot;,&#xd;
			&quot;Mac&quot;: &quot;${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}:${__RandomString(2,0123456789abcdef)}&quot;,&#xd;
               &quot;WLANRadioType&quot;: &quot;2.4G&quot;,&#xd;
               &quot;WLANRadioPower&quot;: &quot;12&quot;&#xd;
		}		&#xd;
		]&#xd;
	},&#xd;
	&quot;ponInfo&quot;: {&#xd;
		&quot;PONRXPower&quot;: ${__Random(100,999999)},&#xd;
		&quot;PONTXPower&quot;: ${__Random(100,999999)}&#xd;
	},&#xd;
	&quot;potsInfo&quot;: {&#xd;
		&quot;potsStatus&quot;: &quot;SUCCESS&quot;,&#xd;
		&quot;potsPhoneNumber&quot;: &quot;+${__Random(8647100000001,8647199999999)}&quot;,&#xd;
		&quot;potsIndex&quot;: 1&#xd;
	},&#xd;
	&quot;deviceStatus&quot;: {&#xd;
		&quot;lan1ConnectStatus&quot;: &quot;CONNECTED&quot;,&#xd;
		&quot;lan2ConnectStatus&quot;: &quot;DISCONNECTED&quot;,&#xd;
		&quot;lan3ConnectStatus&quot;: &quot;DISCONNECTED&quot;,&#xd;
		&quot;lan4ConnectStatus&quot;: &quot;DISCONNECTED&quot;,&#xd;
		&quot;bootTime&quot;: &quot;${__dateTimeConvert(${__timeShift(,${__time()},-PT${__Random(1,5)}m,)},,yyyy-MM-dd HH:mm:ss,)}&quot;,&#xd;
		&quot;runingTime&quot;: ${__Random(10,300)},&#xd;
		&quot;WAN&quot;: &quot;CONNECTED&quot;,&#xd;
		&quot;WIFI&quot;: &quot;DISCONNECTED&quot;,&#xd;
		&quot;CPU&quot;: ${__Random(0,100)},&#xd;
		&quot;RAM&quot;: ${__Random(0,100)},&#xd;
		&quot;PPPOEError&quot;: &quot;ERROR_NONE&quot;,&#xd;
		&quot;PPPOEStatus&quot;: &quot;CONNECTED&quot;,&#xd;
		&quot;lanIP&quot;: &quot;${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
          &quot;lanIPV6&quot;: &quot;23:23:23:23:23:23&quot;,&#xd;
		&quot;wanIP&quot;: &quot;${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}.${__Random(100,200)}&quot;,&#xd;
          &quot;wanIPV6&quot;: &quot;44:44:44:44:44:44&quot;&#xd;
	}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">135.251.218.88</stringProp>
          <stringProp name="HTTPSampler.port">19002</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">rest/cmcc_softprobe/home_gateway/bootmessage</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="alarm-message" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">200</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time"></stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="alarm" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;eventType&quot;: {&#xd;
    &quot;eventCode&quot;: 3,&#xd;
    &quot;subEvent&quot;: 7&#xd;
  },&#xd;
  &quot;actualTime&quot;: ${__time()},&#xd;
  &quot;deviceInfo&quot;: {&#xd;
    &quot;deviceId&quot;: &quot;${sn}&quot;&#xd;
  },&#xd;
  &quot;dpiVersionInfo&quot;: {&#xd;
	&quot;interfaceVersion&quot;: &quot;V4.0.0.JiaKuan&quot;,&#xd;
	&quot;version&quot;: &quot;4.0.1.JiaKuan&quot;&#xd;
  },&#xd;
  &quot;dnsWarningInfo&quot;: {&#xd;
    &quot;requestTime&quot;: &quot;${__time(yyyy-MM-dd-HH-mm-ss-SSS,)}&quot;,&#xd;
    &quot;dnsDomain&quot;: &quot;www.baidu.com&quot;,&#xd;
    &quot;dnsParseServer&quot;: &quot;10.10.10.1&quot;,&#xd;
    &quot;dnsResponseDelay&quot;: ${__Random(10,99)},&#xd;
    &quot;dnsParseModel&quot;: &quot;IPV4&quot;&#xd;
  },&#xd;
  &quot;tcpWarningInfo&quot;: {&#xd;
    &quot;requestTime&quot;: &quot;${__time(yyyy-MM-dd-HH-mm-ss-SSS,)}&quot;,&#xd;
    &quot;url&quot;: &quot;www.sina.com&quot;,&#xd;
    &quot;destinationHost&quot;: &quot;10.111.10.10&quot;,&#xd;
    &quot;protocol&quot;: &quot;TCP&quot;,&#xd;
    &quot;connectStep&quot;: 1,&#xd;
    &quot;txRate&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
    &quot;rxRate&quot;: &quot;${__Random(100,99999)}&quot;&#xd;
  },&#xd;
  &quot;httpWarningInfo&quot;: {&#xd;
    &quot;requestTime&quot;: &quot;${__time(yyyy-MM-dd-HH-mm-ss-SSS,)}&quot;,&#xd;
    &quot;url&quot;: &quot;www.bing.com&quot;,&#xd;
    &quot;destinationHost&quot;: &quot;111.10.120.12&quot;,&#xd;
    &quot;warningType&quot;: 1,&#xd;
    &quot;txRate&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
    &quot;rxRate&quot;: &quot;${__Random(100,99999)}&quot;,&#xd;
    &quot;firstGetResponse&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
    &quot;returnCode&quot;: &quot;400&quot;&#xd;
  },&#xd;
  &quot;httpDownloadWarningInfo&quot;: {&#xd;
    &quot;requestTime&quot;: &quot;${__time(yyyy-MM-dd-HH-mm-ss-SSS,)}&quot;,&#xd;
    &quot;url&quot;: &quot;www.iqiyi.com&quot;,&#xd;
    &quot;destinationHost&quot;: &quot;120.11.11.10&quot;,&#xd;
    &quot;txRate&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
    &quot;rxRate&quot;: &quot;${__Random(100,99999)}&quot;,&#xd;
    &quot;firstGetResponse&quot;: &quot;${__Random(10,99)}&quot;,&#xd;
    &quot;httpDownloadDelay&quot;: &quot;${__Random(10,99)}&quot;&#xd;
  },&#xd;
  &quot;cpuRateWarningInfo&quot;: {&#xd;
    &quot;reason&quot;: &quot;cpuRateOverLimit&quot;,&#xd;
    &quot;cpuRate&quot;: &quot;${__Random(10,99)}&quot;&#xd;
  }&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">135.251.218.88</stringProp>
          <stringProp name="HTTPSampler.port">19002</stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">rest/cmcc_softprobe/home_gateway/alarm</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="sn-vendor-csv" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="filename">C:/Data/github-folders/java/jdk-test/test-tools/jmeter/sn-vendor.csv</stringProp>
        <boolProp name="ignoreFirstLine">false</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">sn,vendor</stringProp>
      </CSVDataSet>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
